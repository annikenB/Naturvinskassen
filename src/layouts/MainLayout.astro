---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import "../styles/tailwind.css";
import "animate.css";
const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Londrina+Solid:wght@100;300;400;900&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Manrope:wght@200..800&display=swap"
      rel="stylesheet"
    />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{Astro.props.title}</title>
  </head>
  <body class="bg-gul-50">
    <div class="custom-cursor"></div>
    <header>
      <Header />
    </header>

    <main>
      <slot />
    </main>

    <footer>
      <Footer />
    </footer>

    <script>
      class Login extends HTMLElement {
        constructor() {
          super();
          this.attachShadow({ mode: "open" });
        }
        connectedCallback() {
          this.html = `<style>
            #login-modal {
              background: black;
              position: fixed;
              width: 100vw;
              height: 100vh;
              display: flex;
              justify-content: center;
              align-items: center;
            }
            .loginmodal-container {
              padding: 30px;
              max-width: 350px;
              background-color: #F7F7F7;
              border-radius: 4px;
              box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);
              font-family: Arial, sans-serif;
            }
            .loginmodal-container h1 {
              text-align: center;
              margin-bottom: 20px;
            }
            input[type=password] {
              width: 100%;
              padding: 10px;
              margin-bottom: 10px;
              border: 1px solid #ccc;
              border-radius: 4px;
            }
            input[type=submit] {
              width: 100%;
              padding: 10px;
              background: #4CAF50;
              color: white;
              border: none;
              border-radius: 4px;
              cursor: pointer;
            }
            input[type=submit]:hover {
              background: #45a049;
            }
          </style>
          <div id="login-modal">
            <div class="loginmodal-container">
              <h1>Login</h1>
              <form>
                <input type="password" name="pass" placeholder="Password">
                <input type="submit" value="Login">
              </form>
            </div>
          </div>`;
          this.render();

          // Legg til event listener for login-knappen
          this.shadowRoot
            .querySelector("form")
            .addEventListener("submit", (e) => {
              e.preventDefault();
              const passwordInput =
                this.shadowRoot.querySelector("input[name=pass]").value;
              if (passwordInput === "kea") {
                document.querySelector("#totally-delete-me").remove();
                localStorage.setItem("iform-totally-logged-in", true);
              } else {
                alert("Incorrect password");
              }
            });
        }
        render() {
          this.shadowRoot.innerHTML = this.html;
        }
      }
      customElements.define("iform-login", Login);

      window.addEventListener("load", () => {
        if (!localStorage.getItem("iform-totally-logged-in")) {
          const div = document.createElement("div");
          div.id = "totally-delete-me";
          div.style.width = "100vw";
          div.style.height = "100vh";
          div.style.position = "fixed";
          div.style.zIndex = "9999";

          div.innerHTML = "<iform-login />";
          document.body.prepend(div);
        }
      });

      const cursor = document.querySelector(".custom-cursor");
      document.addEventListener("mousemove", (e) => {
        cursor.style.left = `${e.pageX}px`;
        cursor.style.top = `${e.pageY}px`;
      });
    </script>
  </body>
</html>

<style>
  body {
    cursor: none;
  }

  .custom-cursor {
    position: absolute;
    width: 14px;
    height: 14px;
    z-index: 999;
    background-color: #2b042d;
    border-radius: 50%;
    pointer-events: none;
    transform: translate(-50%, -50%);
    transition: transform 0.1s ease;
  }
</style>
